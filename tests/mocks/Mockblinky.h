/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKBLINKY_H
#define _MOCKBLINKY_H

#include "unity.h"
#include "blinky.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockblinky_Init(void);
void Mockblinky_Destroy(void);
void Mockblinky_Verify(void);




#define blinky_init_Expect(b, pattern, size, repeat, state) blinky_init_CMockExpect(__LINE__, b, pattern, size, repeat, state)
void blinky_init_CMockExpect(UNITY_LINE_TYPE cmock_line, Blinky* b, uint16_t* pattern, uint8_t size, bool repeat, BlinkyState state);
#define blinky_enable_Expect(b, enabled) blinky_enable_CMockExpect(__LINE__, b, enabled)
void blinky_enable_CMockExpect(UNITY_LINE_TYPE cmock_line, Blinky* b, bool enabled);
#define blinky_repeat_Expect(b, repeat) blinky_repeat_CMockExpect(__LINE__, b, repeat)
void blinky_repeat_CMockExpect(UNITY_LINE_TYPE cmock_line, Blinky* b, bool repeat);
#define blinky_set_pattern_Expect(b, pattern, size) blinky_set_pattern_CMockExpect(__LINE__, b, pattern, size)
void blinky_set_pattern_CMockExpect(UNITY_LINE_TYPE cmock_line, Blinky* b, uint16_t* pattern, uint8_t size);
#define blinky_reset_Expect(b, state) blinky_reset_CMockExpect(__LINE__, b, state)
void blinky_reset_CMockExpect(UNITY_LINE_TYPE cmock_line, Blinky* b, BlinkyState state);
#define blinky_routine_ExpectAndReturn(b, t, cmock_retval) blinky_routine_CMockExpectAndReturn(__LINE__, b, t, cmock_retval)
void blinky_routine_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Blinky* b, uint32_t t, BlinkyState cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
