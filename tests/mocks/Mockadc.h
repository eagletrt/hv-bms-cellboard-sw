/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKADC_H
#define _MOCKADC_H

#include "unity.h"
#include "adc.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockadc_Init(void);
void Mockadc_Destroy(void);
void Mockadc_Verify(void);




#define MX_ADC1_Init_Ignore() MX_ADC1_Init_CMockIgnore()
void MX_ADC1_Init_CMockIgnore(void);
#define MX_ADC1_Init_StopIgnore() MX_ADC1_Init_CMockStopIgnore()
void MX_ADC1_Init_CMockStopIgnore(void);
#define MX_ADC1_Init_Expect() MX_ADC1_Init_CMockExpect(__LINE__)
void MX_ADC1_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define MX_ADC2_Init_Ignore() MX_ADC2_Init_CMockIgnore()
void MX_ADC2_Init_CMockIgnore(void);
#define MX_ADC2_Init_StopIgnore() MX_ADC2_Init_CMockStopIgnore()
void MX_ADC2_Init_CMockStopIgnore(void);
#define MX_ADC2_Init_Expect() MX_ADC2_Init_CMockExpect(__LINE__)
void MX_ADC2_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define MX_ADC3_Init_Ignore() MX_ADC3_Init_CMockIgnore()
void MX_ADC3_Init_CMockIgnore(void);
#define MX_ADC3_Init_StopIgnore() MX_ADC3_Init_CMockStopIgnore()
void MX_ADC3_Init_CMockStopIgnore(void);
#define MX_ADC3_Init_Expect() MX_ADC3_Init_CMockExpect(__LINE__)
void MX_ADC3_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define adc_read_cellboard_id_IgnoreAndReturn(cmock_retval) adc_read_cellboard_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void adc_read_cellboard_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, AdcReturnCode cmock_to_return);
#define adc_read_cellboard_id_StopIgnore() adc_read_cellboard_id_CMockStopIgnore()
void adc_read_cellboard_id_CMockStopIgnore(void);
#define adc_read_cellboard_id_ExpectAndReturn(out, cmock_retval) adc_read_cellboard_id_CMockExpectAndReturn(__LINE__, out, cmock_retval)
void adc_read_cellboard_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CellboardId* out, AdcReturnCode cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
