/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSPI_H
#define _MOCKSPI_H

#include "unity.h"
#include "spi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockspi_Init(void);
void Mockspi_Destroy(void);
void Mockspi_Verify(void);




#define MX_SPI3_Init_Ignore() MX_SPI3_Init_CMockIgnore()
void MX_SPI3_Init_CMockIgnore(void);
#define MX_SPI3_Init_StopIgnore() MX_SPI3_Init_CMockStopIgnore()
void MX_SPI3_Init_CMockStopIgnore(void);
#define MX_SPI3_Init_Expect() MX_SPI3_Init_CMockExpect(__LINE__)
void MX_SPI3_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define spi_send_Ignore() spi_send_CMockIgnore()
void spi_send_CMockIgnore(void);
#define spi_send_StopIgnore() spi_send_CMockStopIgnore()
void spi_send_CMockStopIgnore(void);
#define spi_send_Expect(data, size) spi_send_CMockExpect(__LINE__, data, size)
void spi_send_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* data, size_t size);
#define spi_send_and_receive_Ignore() spi_send_and_receive_CMockIgnore()
void spi_send_and_receive_CMockIgnore(void);
#define spi_send_and_receive_StopIgnore() spi_send_and_receive_CMockStopIgnore()
void spi_send_and_receive_CMockStopIgnore(void);
#define spi_send_and_receive_Expect(data, out, size, out_size) spi_send_and_receive_CMockExpect(__LINE__, data, out, size, out_size)
void spi_send_and_receive_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* data, uint8_t* out, size_t size, size_t out_size);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
