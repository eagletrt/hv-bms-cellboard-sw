/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSTM32G4XX_IT_H
#define _MOCKSTM32G4XX_IT_H

#include "unity.h"
#include "stm32g4xx_it.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockstm32g4xx_it_Init(void);
void Mockstm32g4xx_it_Destroy(void);
void Mockstm32g4xx_it_Verify(void);




#define NMI_Handler_Ignore() NMI_Handler_CMockIgnore()
void NMI_Handler_CMockIgnore(void);
#define NMI_Handler_StopIgnore() NMI_Handler_CMockStopIgnore()
void NMI_Handler_CMockStopIgnore(void);
#define NMI_Handler_Expect() NMI_Handler_CMockExpect(__LINE__)
void NMI_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HardFault_Handler_Ignore() HardFault_Handler_CMockIgnore()
void HardFault_Handler_CMockIgnore(void);
#define HardFault_Handler_StopIgnore() HardFault_Handler_CMockStopIgnore()
void HardFault_Handler_CMockStopIgnore(void);
#define HardFault_Handler_Expect() HardFault_Handler_CMockExpect(__LINE__)
void HardFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define MemManage_Handler_Ignore() MemManage_Handler_CMockIgnore()
void MemManage_Handler_CMockIgnore(void);
#define MemManage_Handler_StopIgnore() MemManage_Handler_CMockStopIgnore()
void MemManage_Handler_CMockStopIgnore(void);
#define MemManage_Handler_Expect() MemManage_Handler_CMockExpect(__LINE__)
void MemManage_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define BusFault_Handler_Ignore() BusFault_Handler_CMockIgnore()
void BusFault_Handler_CMockIgnore(void);
#define BusFault_Handler_StopIgnore() BusFault_Handler_CMockStopIgnore()
void BusFault_Handler_CMockStopIgnore(void);
#define BusFault_Handler_Expect() BusFault_Handler_CMockExpect(__LINE__)
void BusFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define UsageFault_Handler_Ignore() UsageFault_Handler_CMockIgnore()
void UsageFault_Handler_CMockIgnore(void);
#define UsageFault_Handler_StopIgnore() UsageFault_Handler_CMockStopIgnore()
void UsageFault_Handler_CMockStopIgnore(void);
#define UsageFault_Handler_Expect() UsageFault_Handler_CMockExpect(__LINE__)
void UsageFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define SVC_Handler_Ignore() SVC_Handler_CMockIgnore()
void SVC_Handler_CMockIgnore(void);
#define SVC_Handler_StopIgnore() SVC_Handler_CMockStopIgnore()
void SVC_Handler_CMockStopIgnore(void);
#define SVC_Handler_Expect() SVC_Handler_CMockExpect(__LINE__)
void SVC_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define DebugMon_Handler_Ignore() DebugMon_Handler_CMockIgnore()
void DebugMon_Handler_CMockIgnore(void);
#define DebugMon_Handler_StopIgnore() DebugMon_Handler_CMockStopIgnore()
void DebugMon_Handler_CMockStopIgnore(void);
#define DebugMon_Handler_Expect() DebugMon_Handler_CMockExpect(__LINE__)
void DebugMon_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define PendSV_Handler_Ignore() PendSV_Handler_CMockIgnore()
void PendSV_Handler_CMockIgnore(void);
#define PendSV_Handler_StopIgnore() PendSV_Handler_CMockStopIgnore()
void PendSV_Handler_CMockStopIgnore(void);
#define PendSV_Handler_Expect() PendSV_Handler_CMockExpect(__LINE__)
void PendSV_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define SysTick_Handler_Ignore() SysTick_Handler_CMockIgnore()
void SysTick_Handler_CMockIgnore(void);
#define SysTick_Handler_StopIgnore() SysTick_Handler_CMockStopIgnore()
void SysTick_Handler_CMockStopIgnore(void);
#define SysTick_Handler_Expect() SysTick_Handler_CMockExpect(__LINE__)
void SysTick_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define it_cs_enter_Ignore() it_cs_enter_CMockIgnore()
void it_cs_enter_CMockIgnore(void);
#define it_cs_enter_StopIgnore() it_cs_enter_CMockStopIgnore()
void it_cs_enter_CMockStopIgnore(void);
#define it_cs_enter_Expect() it_cs_enter_CMockExpect(__LINE__)
void it_cs_enter_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define it_cs_exit_Ignore() it_cs_exit_CMockIgnore()
void it_cs_exit_CMockIgnore(void);
#define it_cs_exit_StopIgnore() it_cs_exit_CMockStopIgnore()
void it_cs_exit_CMockStopIgnore(void);
#define it_cs_exit_Expect() it_cs_exit_CMockExpect(__LINE__)
void it_cs_exit_CMockExpect(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
